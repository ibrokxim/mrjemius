<?php

namespace App\Services;

use App\Models\Order;
use Illuminate\Support\Facades\Log;
use Telegram\Bot\Laravel\Facades\Telegram;

class TelegramService
{
    public function sendOrderNotifications(Order $order): void
    {
//        $this->notifyAdmin($order);
        $this->notifyClient($order);
    }

    /**
     * –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ.
     */
    protected function notifyAdmin(Order $order): void
    {
        $adminChatId = -4857413796; // –≤–µ—Ä–Ω–∏ —Å—é–¥–∞ env() –µ—Å–ª–∏ —Ç–µ—Å—Ç –ø—Ä–æ—à—ë–ª

        if (!$adminChatId) {
            Log::warning("notifyAdmin: TELEGRAM_ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.");
            return;
        }

        $user = $order->user;
        $address = $order->shippingAddress;

        // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        $orderNumber = $this->escapeMarkdown($order->order_number);
        $userName = $this->escapeMarkdown($user->name ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
        $userPhone = $address->phone_number ?? '–ù–µ —É–∫–∞–∑–∞–Ω'; // –ù–µ —Ç—Ä–µ–±—É–µ—Ç —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–¥-–±–ª–æ–∫–µ
        $addressString = $this->escapeMarkdown($address ? "{$address->city}, {$address->address_line_1}" : '–ù–µ —É–∫–∞–∑–∞–Ω');
        $customerNotes = $this->escapeMarkdown($order->customer_notes ?? '');

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫: –≤—Ä—É—á–Ω—É—é —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫
        $adminMessage = "üéâ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑\\!* ‚Ññ{$orderNumber}\n\n";

        $adminMessage .= "*–ö–ª–∏–µ–Ω—Ç:*\n";
        $adminMessage .= "  ‚Ä¢ *–ò–º—è:* {$userName}\n";
        $adminMessage .= "  ‚Ä¢ *–¢–µ–ª–µ—Ñ–æ–Ω:* `{$userPhone}`\n\n";

        $adminMessage .= "*–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:*\n";
        $adminMessage .= "  ‚Ä¢ *–ê–¥—Ä–µ—Å:* {$addressString}\n\n";

        $adminMessage .= "*–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*\n";
        foreach ($order->items as $item) {
            $productName = $this->escapeMarkdown($item->product_name);
            $adminMessage .= "‚Ä¢ {$productName} \\(x{$item->quantity}\\)\n";
        }
        $adminMessage .= "\n";

        if (!empty($customerNotes)) {
            $adminMessage .= "*–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª–∏–µ–Ω—Ç–∞:*\n";
            $adminMessage .= "\\_{$customerNotes}\\_\n\n";
        }

        try {
            Telegram::sendMessage([
                'chat_id' => $adminChatId,
                'text' => $adminMessage,
                'parse_mode' => 'MarkdownV2'
            ]);
            Log::info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –¥–ª—è –∑–∞–∫–∞–∑–∞ ‚Ññ{$order->order_number} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.");
        } catch (\Exception $e) {
            Log::error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É –¥–ª—è –∑–∞–∫–∞–∑–∞ ‚Ññ{$order->order_number}: " . $e->getMessage());
        }
    }


    /**
     * –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.
     */
    protected function notifyClient(Order $order): void
    {
        $user = $order->user;
        if (!$user || !$user->telegram_id) {
            Log::warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –¥–ª—è –∑–∞–∫–∞–∑–∞ ‚Ññ{$order->order_number}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç telegram_chat_id.");
            return;
        }
        $paymentMethodText = '';
        if ($order->payment_method === 'cash') {
            $paymentMethodText = '–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏';
        } elseif ($order->payment_method === 'card_online') {
            $paymentMethodText = '–ö–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω (–æ–ø–ª–∞—á–µ–Ω–æ)'; // –ò–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç
        } else {
            // –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã
            $paymentMethodText = $order->payment_method;
        }
        $clientMessage = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {$user->name}!\n\n";
        $clientMessage .= "–í–∞—à –∑–∞–∫–∞–∑ **‚Ññ{$order->order_number}** —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω.\n\n";
        $clientMessage .= "–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: **" . number_format($order->total_amount, 0, '.', ' ') . " —Å—É–º**.\n";
        $clientMessage .= "–¢–∏–ø –æ–ø–ª–∞—Ç—ã: {$paymentMethodText}\n\n";
        $clientMessage .= "–ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.\n\n";
        $clientMessage .= "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É: +998 77 132 77 00\n\n";
        $clientMessage .= "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!";

        try {
            Telegram::sendMessage([
                'chat_id' => $user->telegram_id,
                'text' => $clientMessage,
                'parse_mode' => 'Markdown'
            ]);
        } catch (\Exception $e) {
            Log::error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É –¥–ª—è –∑–∞–∫–∞–∑–∞ ‚Ññ{$order->order_number}: " . $e->getMessage());
        }
    }

    private function formatPaymentMethod(string $method): string
    {
        return match ($method) {
            'cash' => '–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏',
            'card_online' => '–ö–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω (Payme/Uzcard)',
            default => '–ù–µ —É–∫–∞–∑–∞–Ω',
        };
    }

    private function escapeMarkdown(?string $text): string
    {
        if ($text === null) {
            return '';
        }
        // –°–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è MarkdownV2
        $escapeChars = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!'];

        return str_replace($escapeChars, array_map(fn($char) => '\\' . $char, $escapeChars), $text);
    }

    public function sendFeedbackNotification(string $name, string $phone): void
    {
        $adminChatId = -4857413796 ;
        if (!$adminChatId) {
            Log::warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É: TELEGRAM_ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.");
            return;
        }

        // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $safeName = $this->escapeMarkdown($name);
        $safePhone = $this->escapeMarkdown($phone);

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        $message = "üìû **–ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫\\!**\n\n";
        $message .= "üë§ **–ò–º—è:** {$safeName}\n";
        $message .= "üì± **–¢–µ–ª–µ—Ñ–æ–Ω:** `{$safePhone}`"; // –í `code` –±–ª–æ–∫–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è

        try {
            Telegram::sendMessage([
                'chat_id' => $adminChatId,
                'text' => $message,
                'parse_mode' => 'MarkdownV2'
            ]);
            Log::info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç {$safeName} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.");
        } catch (\Exception $e) {
            Log::error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: " . $e->getMessage());
            // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∑–Ω–∞–ª –æ–± –æ—à–∏–±–∫–µ
            throw $e;
        }
    }
}
