<?php

namespace App\Http\Controllers;

use App\Http\Requests\FilterProductsRequest;
use App\Models\Category;
use App\Services\CategoryService;
use App\Services\ProductService;
use Illuminate\Http\JsonResponse;

class CategoryController extends Controller
{
    private CategoryService $categoryService;
    private ProductService $productService;

    public function __construct(
        CategoryService $categoryService,
        ProductService $productService
    )
    {
        $this->categoryService = $categoryService;
        $this->productService = $productService;
    }

    public function getAllCategories(): JsonResponse
    {
        $categories = $this->categoryService->getCategoriesForMainPage();

        return response()->json($categories);
    }

    public function getCategoryBySlug(string $slug): JsonResponse
    {
        $category = $this->categoryService->getCategoryBySlug($slug);

        return response()->json($category);
    }

    public function callAction($method, $parameters)
    {
        return parent::callAction($method, $parameters); // TODO: Change the autogenerated stub
    }

    public function show(FilterProductsRequest $request, Category $category)
    {
        $products = $this->productService->getProductsForCategoryPage($category, $request->validated());

        // 2. Получаем все категории для боковой панели-фильтра через CategoryService
        $allCategories = $this->categoryService->getCategoriesForFilter();

        return view('components.category-show', [
            'category' => $category,
            'products' => $products,
            'allCategories' => $allCategories,
        ]);

    }
}
